{"version":3,"sources":["themes/GlobalStyle.js","components/footer/Footer.style.js","components/footer/Footer.js","components/header/Header.style.js","components/header/Header.js","components/selectCountry/SelectCountry.style.js","helpers/RequestCovidApi.js","helpers/replace.js","helpers/fetchData.js","components/errors/Errors.style.js","components/errors/Errors.js","components/selectCountry/SelectCountry.js","components/tableCountries/TableCountries.style.js","components/Loader/Loader.style.js","components/Loader/Loader.js","components/tableCountries/TableCountries.js","components/Stats/Stats.style.js","components/tile/Tile.style.js","components/tile/Tile.js","components/Stats/Stats.js","components/tableCountryHistory/TableCountryHistory.style.js","helpers/DateTime.js","components/tableCountryHistory/TableCountryHistory.js","themes/LightTheme.js","themes/DarkTheme.js","helpers/LocalStorage.js","context/ThemeContext.js","components/toggleTheme/ToggleTheme.style.js","components/toggleTheme/ToggleTheme.js","context/LangContext.js","components/selectLang/SelectLang.style.js","components/selectLang/SelectLang.js","components/navigation/Navigation.style.js","components/navigation/Navigation.js","views/Statistics/Statistics.js","views/Root/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","bgSite","baseline1","Footer","styled","footer","Paragraph","p","Anchor","a","baseline2","FooterComponent","id","defaultMessage","href","Header","header","HeaderComponent","children","handleCountryChange","to","onClick","Select","select","Request","path","headers","process","fetch","method","response","replace","string","searchValue","newValue","all","RegExp","api","dataSetter","errorsSetter","loadingSetter","res","json","fetchData","Container","div","errors","SelectCountry","props","selectCountry","useState","countries","setCountries","setErrors","selectedCountry","setSelectedCountry","useEffect","onInput","event","target","value","txt","key","map","country","msg","Table","table","Thead","thead","Tbody","tbody","surface","Td","td","pointer","Wrapper","LoaderComponent","useContext","ThemeContext","type","color","height","width","TableComponent","data","setData","orderCountry","setOrderCountry","orderCases","setOrderCases","orderDeaths","setOrderDeaths","orderRecovered","setOrderRecovered","loading","setLoading","sortTable","what","order","temps","sort","b","charCodeAt","cases","total","recovered","deaths","Loader","role","onKeyPress","CasesGroup","border","row","Headline","h2","LastUpdate","span","danger","success","info","Div","rowAll","H3","h3","H4","h4","Tile","title","large","GlobalStats","localisation","setCorrectValue","param","time","Date","new","active","checkValue","DayBack","date","back","d","setDate","getDate","day","month","getMonth","year","getFullYear","setResponse","addFieldNewRecoveredToObject","reverse","filter","index","self","findIndex","s","slice","arr","recovered_new","sliceElementToShow","getTime","values","number","themeToggle","saveToLocalStorage","name","obj","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","Context","createContext","themes","dark","mode","pallete","DarkTheme","light","LightTheme","ThemeProviderWrapper","switchTo","setTheme","Provider","raySize","offsetOrthogonal","offsetDiagonal","Label","label","Toggle","input","attrs","ToggleTheme","statement","htmlFor","locales","en","locale","messages","localesEn","pl","localesPl","window","navigator","language","toLowerCase","split","languageWithoutRegionCode","IntlProviderWrapper","setState","state","defaultLocale","Option","option","LanguageSwitch","React","IntlContext","selectedLanguage","setSelectedLanguage","defaultValue","Navigation","Statistics","setCountry","prop","Stats","TableCountries","Root","basename","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.790ffcd8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n*, *::before, *::after {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  font-family: 'Lato', sans-serif;\n  font-size: 1.6rem;\n  background-color: ${({ theme }) => theme.bgSite};\n  color: ${({ theme }) => theme.baseline1};\n  max-width: 80rem;\n  margin: 0 auto;\n  padding: 0 1.5rem;\n}\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nconst Footer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 1.5rem 0;\n`\n\nconst Paragraph = styled.p`\n  font-size: 1.2rem;\n  line-height: 1.6;\n`\n\nconst Anchor = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.baseline2};\n`\n\nexport { Footer, Paragraph, Anchor }\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Footer, Paragraph, Anchor } from './Footer.style'\n\nconst FooterComponent = () => {\n  return (\n    <Footer>\n      <Paragraph>\n        <FormattedMessage id=\"createdBy\" defaultMessage=\"Created by \" />{' '}\n        <Anchor href=\"#\">Karol Wolski</Anchor>.\n      </Paragraph>\n      <Paragraph>\n        <FormattedMessage id=\"poweredBy\" defaultMessage=\"Powered by \" />{' '}\n        <Anchor href=\"https://rapidapi.com/api-sports/api/covid-193\">\n          COVID-19 Api\n        </Anchor>\n      </Paragraph>\n    </Footer>\n  )\n}\n\nexport default FooterComponent\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 5rem;\n  margin: 1.5rem 0;\n\n  h1 {\n    font-size: 2.4rem;\n\n    @media (min-width: 640px) {\n      font-size: 3rem;\n    }\n\n    a {\n      text-decoration: none;\n      color: ${({ theme }) => theme.baseline1};\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'react-router-dom'\nimport Header from './Header.style'\n\nconst HeaderComponent = ({ children, handleCountryChange }) => {\n  return (\n    <Header>\n      <h1>\n        <Link to=\"/\" onClick={() => handleCountryChange('all')}>\n          <FormattedMessage\n            id=\"pageTitle\"\n            defaultMessage=\"Covid-19 Statistics\"\n          />\n        </Link>\n      </h1>\n      {children}\n    </Header>\n  )\n}\n\nexport default HeaderComponent\n","import styled from 'styled-components'\n\nconst Select = styled.select`\n  width: 100%;\n  margin: 1rem 0;\n  padding: 1rem;\n`\n\nexport default Select\n","const Request = async path => {\n  const method = 'GET'\n  const headers = {\n    'x-rapidapi-host': process.env.REACT_APP_COVID19_API_HOST,\n    'x-rapidapi-key': process.env.REACT_APP_COVID19_API_KEY,\n  }\n  const response = await fetch(\n    `${process.env.REACT_APP_COVID19_API_URL}${path}`,\n    {\n      headers,\n      method,\n    }\n  )\n  return response\n}\n\nexport default Request\n","const replace = (string, searchValue, newValue, all = false) =>\n  all\n    ? string.replace(new RegExp(searchValue, 'g'), newValue)\n    : string.replace(searchValue, newValue)\n\nexport default replace\n","async function fetchData(\n  api,\n  Request,\n  dataSetter,\n  errorsSetter,\n  loadingSetter\n) {\n  try {\n    errorsSetter(false)\n    const res = await Request(api)\n    const json = await res.json()\n    dataSetter(json)\n    if (loadingSetter) loadingSetter(false)\n  } catch (err) {\n    if (loadingSetter) loadingSetter(false)\n    errorsSetter(true)\n  }\n}\n\nexport default fetchData\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n  text-align: center;\n`\n\nexport default Container\n","import React from 'react'\nimport Container from './Errors.style'\n\nconst errors = ({ children }) => <Container>{children}</Container>\n\nexport default errors\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport Select from './SelectCountry.style'\nimport Request from '../../helpers/RequestCovidApi'\nimport replace from '../../helpers/replace'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\n\nconst SelectCountry = props => {\n  const { handleCountryChange, selectCountry } = props\n  const [countries, setCountries] = useState([])\n  const [errors, setErrors] = useState(false)\n  const [selectedCountry, setSelectedCountry] = useState()\n\n  useEffect(() => {\n    fetchData('/countries', Request, setCountries, setErrors)\n  }, [])\n\n  useEffect(() => {\n    return selectCountry === 'all'\n      ? setSelectedCountry('Select country')\n      : setSelectedCountry(selectCountry)\n  }, [selectCountry])\n\n  return (\n    <div>\n      <Select\n        id=\"countries\"\n        onInput={event => handleCountryChange(event.target.value)}\n        value={selectedCountry}>\n        <FormattedMessage id=\"selectCountry\" defaultMessage=\"Select Country\">\n          {txt => (\n            <option key=\"select\" value=\"all\">\n              {txt}\n            </option>\n          )}\n        </FormattedMessage>\n        {countries.response &&\n          countries.response.map(\n            country =>\n              country !== 'all' && (\n                <FormattedMessage\n                  id={country}\n                  defaultMessage={country}\n                  key={country}>\n                  {msg => (\n                    <option value={country}>\n                      {replace(msg, '-', ' ', true)}\n                    </option>\n                  )}\n                </FormattedMessage>\n              )\n          )}\n      </Select>\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n    </div>\n  )\n}\n\nexport default SelectCountry\n","import styled from 'styled-components'\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 1.5rem 0;\n  text-align: center;\n`\n\nconst Thead = styled.thead`\n  th {\n    padding: 1rem 0;\n    cursor: pointer;\n  }\n`\n\nconst Tbody = styled.tbody`\n  tr:nth-of-type(odd) {\n    background: ${({ theme }) => theme.surface};\n  }\n`\n\nconst Td = styled.td`\n  padding: 1rem;\n  ${({ pointer }) =>\n    pointer &&\n    `\n    cursor: pointer;\n    `}\n`\n\nconst Container = styled.div`\n  overflow-x: auto;\n  min-height: 20rem;\n  position: relative;\n`\n\nexport { Table, Thead, Tbody, Td, Container }\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  background: ${({ theme }) => theme.bgSite};\n  z-index: 2;\n`\n\nexport default Wrapper\n","import React, { useContext } from 'react'\nimport Loader from 'react-loader-spinner'\nimport { ThemeContext } from 'styled-components'\nimport Wrapper from './Loader.style'\n\nconst LoaderComponent = () => {\n  const theme = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <Loader type=\"ThreeDots\" color={theme.baseline1} height={75} width={75} />\n    </Wrapper>\n  )\n}\n\nexport default LoaderComponent\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedNumber } from 'react-intl'\nimport { Table, Thead, Tbody, Td, Container } from './TableCountries.style'\nimport Request from '../../helpers/RequestCovidApi'\nimport replace from '../../helpers/replace'\nimport LoaderComponent from '../Loader/Loader'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\n\nconst TableComponent = ({ handleCountryChange }) => {\n  const [data, setData] = useState([])\n  const [orderCountry, setOrderCountry] = useState(false)\n  const [orderCases, setOrderCases] = useState(false)\n  const [orderDeaths, setOrderDeaths] = useState(false)\n  const [orderRecovered, setOrderRecovered] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [errors, setErrors] = useState(false)\n  useEffect(() => {\n    fetchData('/statistics', Request, setData, setErrors, setLoading)\n  }, [])\n\n  const sortTable = (what, order) => {\n    const temps = data\n    if (what === 'country') {\n      temps.response.sort((a, b) =>\n        order\n          ? a.country.charCodeAt(0) - b.country.charCodeAt(0)\n          : b.country.charCodeAt(0) - a.country.charCodeAt(0)\n      )\n      setOrderCountry(!order)\n    } else if (what === 'cases') {\n      temps.response.sort((a, b) =>\n        order ? a.cases.total - b.cases.total : b.cases.total - a.cases.total\n      )\n      setOrderCases(!order)\n    } else if (what === 'recovered') {\n      temps.response.sort((a, b) =>\n        order\n          ? a.cases.recovered - b.cases.recovered\n          : b.cases.recovered - a.cases.recovered\n      )\n      setOrderRecovered(!order)\n    } else if (what === 'deaths') {\n      temps.response.sort((a, b) =>\n        order\n          ? a.deaths.total - b.deaths.total\n          : b.deaths.total - a.deaths.total\n      )\n      setOrderDeaths(!order)\n    }\n    setData(temps)\n  }\n\n  return (\n    <Container>\n      {loading && <LoaderComponent />}\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n      {data.response && (\n        <Table>\n          <Thead>\n            <tr>\n              <th onClick={() => sortTable('country', orderCountry)}>\n                <FormattedMessage id=\"country\" defaultMessage=\"Country\" />\n              </th>\n              <th onClick={() => sortTable('cases', orderCases)}>\n                <FormattedMessage id=\"cases\" defaultMessage=\"Cases\" />\n              </th>\n              <th onClick={() => sortTable('recovered', orderRecovered)}>\n                <FormattedMessage id=\"recovered\" defaultMessage=\"Recovered\" />\n              </th>\n              <th onClick={() => sortTable('deaths', orderDeaths)}>\n                <FormattedMessage id=\"deaths\" defaultMessage=\"Deaths\" />\n              </th>\n            </tr>\n          </Thead>\n          <Tbody>\n            {data.response.map(\n              ({ country, cases, deaths }) =>\n                country !== 'All' && (\n                  <tr key={country}>\n                    <Td\n                      pointer\n                      role=\"gridcell\"\n                      onClick={() => handleCountryChange(country)}\n                      onKeyPress={() => handleCountryChange(country)}>\n                      <FormattedMessage id={country} defaultMessage={country}>\n                        {txt => replace(txt, '-', ' ', true)}\n                      </FormattedMessage>\n                    </Td>\n                    <Td>\n                      <FormattedNumber value={cases.total} />\n                    </Td>\n                    <Td>\n                      <FormattedNumber value={cases.recovered} />\n                    </Td>\n                    <Td>\n                      <FormattedNumber value={deaths.total} />\n                    </Td>\n                  </tr>\n                )\n            )}\n          </Tbody>\n        </Table>\n      )}\n    </Container>\n  )\n}\n\nexport default TableComponent\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1.5rem 0;\n`\n\nconst CasesGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  ${({ border, theme }) =>\n    border &&\n    `\n      border-top: 1px dashed;\n      border-bottom: 1px dashed;\n      border-color: ${theme.surface};\n  `}\n\n  @media (min-width: 360px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(${({ row }) => row}, 1fr);\n  }\n`\n\nconst Headline = styled.h2`\n  margin: 1rem 0;\n`\n\nconst Paragraph = styled.p`\n  text-align: center;\n  font-size: 1.8rem;\n  padding: 1rem 0;\n`\n\nconst Cases = styled.span`\n  display: block;\n  font-weight: 700;\n  font-size: 5rem;\n  margin-right: 1rem;\n`\n\nconst LastUpdate = styled.p`\n  font-size: 1.2rem;\n`\n\nconst Info = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1.6rem;\n  color: ${({ theme, type }) => {\n    if (type === 'danger') {\n      return theme.danger\n    }\n    if (type === 'success') {\n      return theme.success\n    }\n    if (type === 'info') {\n      return theme.info\n    }\n    return theme.baseline1\n  }};\n\n  span {\n    display: block;\n  }\n`\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nexport {\n  Container,\n  CasesGroup,\n  Paragraph,\n  Headline,\n  Info,\n  Div,\n  Cases,\n  LastUpdate,\n}\n","import styled from 'styled-components'\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1.5rem;\n  margin: 1.5rem 0;\n\n  ${({ rowAll }) =>\n    rowAll &&\n    `\n    @media(min-width: 360px) and (max-width: 767px) {\n      grid-column-start: 1;\n      grid-column-end: 4;\n    }\n  `}\n`\n\nconst H3 = styled.h3`\n  font-weight: 700;\n  font-size: 2.8rem;\n`\n\nconst H4 = styled.h4`\n  font-size: 1.87rem;\n`\n\nconst Paragraph = styled.p`\n  font-weight: 700;\n  font-size: 2.8rem;\n  color: ${({ theme, type }) => {\n    if (type === 'danger') {\n      return theme.danger\n    }\n    if (type === 'success') {\n      return theme.success\n    }\n    return theme.baseline1\n  }};\n`\nexport { Div, Paragraph, H3, H4 }\n","import React from 'react'\nimport { FormattedMessage, FormattedNumber } from 'react-intl'\nimport { Div, Paragraph, H3, H4 } from './Tile.style'\n\nconst Tile = ({ title, value = 0, type, rowAll, large }) => {\n  return (\n    <Div rowAll={rowAll}>\n      {large ? (\n        <H3>\n          <FormattedMessage id={title} defaultMessage={title} />\n        </H3>\n      ) : (\n        <H4>\n          <FormattedMessage id={title} defaultMessage={title} />\n        </H4>\n      )}\n      {!large && (\n        <Paragraph type={type}>\n          <FormattedNumber value={value} />\n        </Paragraph>\n      )}\n    </Div>\n  )\n}\n\nexport default Tile\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedTime } from 'react-intl'\nimport { Container, CasesGroup, Headline, LastUpdate } from './Stats.style'\nimport Tile from '../tile/Tile'\nimport Request from '../../helpers/RequestCovidApi'\nimport replace from '../../helpers/replace'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\n\nconst GlobalStats = ({ localisation }) => {\n  const [data, setData] = useState([])\n  const [errors, setErrors] = useState()\n\n  useEffect(() => {\n    fetchData(\n      `/statistics?country=${localisation}`,\n      Request,\n      setData,\n      setErrors\n    )\n  }, [localisation])\n\n  const setCorrectValue = param =>\n    param !== null ? param.replace(/[^a-zA-Z0-9 ]/g, '') : 0\n\n  return (\n    <>\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n      {data.response &&\n        data.response.map(({ country, cases, deaths, time }) => (\n          <Container key={country}>\n            <Headline>\n              {country === 'All' ? (\n                <FormattedMessage\n                  id=\"worldStats\"\n                  defaultMessage=\"World Stats\"\n                />\n              ) : (\n                <>\n                  <FormattedMessage id={country} defaultMessage={country}>\n                    {txt => `${replace(txt, '-', ' ', true)}`}\n                  </FormattedMessage>\n                </>\n              )}\n            </Headline>\n            <LastUpdate>\n              <FormattedMessage id=\"lastUpdate\" defaultMessage=\"Last update\" />{' '}\n              <FormattedTime value={new Date(time)} />\n            </LastUpdate>\n            <CasesGroup row=\"3\">\n              <Tile title=\"today\" large rowAll />\n              <Tile title=\"detected\" value={setCorrectValue(cases.new)} />\n              <Tile\n                type=\"danger\"\n                title=\"deaths\"\n                value={setCorrectValue(deaths.new)}\n              />\n            </CasesGroup>\n            <CasesGroup row=\"3\" border>\n              <Tile title=\"total\" large rowAll />\n              <Tile title=\"detected\" value={cases.total} />\n              <Tile type=\"danger\" title=\"deaths\" value={deaths.total} />\n            </CasesGroup>\n            <CasesGroup row=\"3\">\n              <Tile title=\"cases\" large rowAll />\n              <Tile title=\"active\" value={cases.active} />\n              <Tile type=\"success\" title=\"recovered\" value={cases.recovered} />\n            </CasesGroup>\n          </Container>\n        ))}\n    </>\n  )\n}\n\nexport default GlobalStats\n","import styled from 'styled-components'\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 1.5rem 0;\n  text-align: center;\n`\n\nconst Thead = styled.thead`\n  th {\n    padding: 1rem 0;\n    cursor: pointer;\n  }\n`\n\nconst Tbody = styled.tbody`\n  tr:nth-of-type(odd) {\n    background: ${({ theme }) => theme.surface};\n  }\n\n  td {\n    padding: 1rem 0;\n\n    span {\n      color: ${({ theme }) => theme.baseline1};\n      display: block;\n      margin-top: 0.5rem;\n      @media (min-width: 640px) {\n        display: inline-block;\n        margin: 0 0 0 1rem;\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n  overflow-x: auto;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport { Table, Thead, Tbody, Container, Wrapper }\n","const checkValue = param => (param < 10 ? `0${param}` : param)\n\nexport const DateTime = param => {\n  const date = new Date(param)\n  const day = checkValue(date.getDate())\n  const month = checkValue(date.getMonth() + 1)\n  const year = checkValue(date.getFullYear())\n  const hour = checkValue(date.getHours())\n  const minutes = checkValue(date.getMinutes())\n  return `${day}.${month}.${year} ${hour}:${minutes}`\n}\n\nexport const DayBack = (date, back) => {\n  const d = new Date(date)\n  d.setDate(d.getDate() - back)\n  const day = checkValue(d.getDate())\n  const month = checkValue(d.getMonth() + 1)\n  const year = checkValue(d.getFullYear())\n  return `${month}.${day}.${year}`\n}\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedNumber, FormattedDate } from 'react-intl'\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Container,\n  Wrapper,\n} from './TableCountryHistory.style'\nimport Request from '../../helpers/RequestCovidApi'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\nimport { DayBack } from '../../helpers/DateTime'\n\nconst TableComponent = ({ localisation }) => {\n  const [response, setResponse] = useState([])\n  const [data, setData] = useState([])\n  const [errors, setErrors] = useState()\n  const [orderCountry, setOrderCountry] = useState(false)\n  const [orderCases, setOrderCases] = useState(false)\n  const [orderDeaths, setOrderDeaths] = useState(false)\n  const [orderRecovered, setOrderRecovered] = useState(false)\n  const numOfRecords = 11\n  const numOfRecordsToShow = 10\n\n  useEffect(() => {\n    fetchData(\n      `/history?country=${localisation}`,\n      Request,\n      setResponse,\n      setErrors\n    )\n  }, [localisation])\n\n  useEffect(() => {\n    if (typeof response.response !== 'undefined') {\n      const getFirstObjectWithEveryDay = response.response\n        .reverse()\n        .filter(\n          (res, index, self) => index === self.findIndex(s => s.day === res.day)\n        )\n        .reverse()\n\n      const sliceElementsWithArray = getFirstObjectWithEveryDay.slice(\n        0,\n        numOfRecords\n      )\n      const addFieldNewRecoveredToObject = sliceElementsWithArray\n      addFieldNewRecoveredToObject.reverse().map(({ cases }, index, arr) => {\n        if (index > 0)\n          addFieldNewRecoveredToObject[index].cases.recovered_new =\n            cases.recovered - arr[index - 1].cases.recovered\n        return addFieldNewRecoveredToObject\n      })\n\n      const reverseArray = addFieldNewRecoveredToObject.reverse()\n\n      const sliceElementToShow = reverseArray.slice(0, numOfRecordsToShow)\n      setData(sliceElementToShow)\n    }\n  }, [response])\n\n  const sortTable = (what, order) => {\n    const temps = data\n    if (what === 'date') {\n      temps.sort((a, b) =>\n        order\n          ? new Date(a.day).getTime() - new Date(b.day).getTime()\n          : new Date(b.day).getTime() - new Date(a.day).getTime()\n      )\n      setOrderCountry(!order)\n    } else if (what === 'cases') {\n      temps.sort((a, b) =>\n        order ? a.cases.total - b.cases.total : b.cases.total - a.cases.total\n      )\n      setOrderCases(!order)\n    } else if (what === 'recovered') {\n      temps.sort((a, b) =>\n        order\n          ? a.cases.recovered - b.cases.recovered\n          : b.cases.recovered - a.cases.recovered\n      )\n      setOrderRecovered(!order)\n    } else if (what === 'deaths') {\n      temps.sort((a, b) =>\n        order\n          ? a.deaths.total - b.deaths.total\n          : b.deaths.total - a.deaths.total\n      )\n      setOrderDeaths(!order)\n    }\n    setData(temps)\n  }\n\n  return (\n    <Wrapper>\n      <h3>\n        <FormattedMessage\n          id=\"lastDays\"\n          defaultMessage=\"Last {number} days\"\n          values={{\n            number: '10',\n          }}\n        />\n      </h3>\n      <Container>\n        {errors && (\n          <Error>\n            <FormattedMessage\n              id=\"errorServer\"\n              defaultMessage=\"An error has occurred from the server, please come back later.\"\n            />\n          </Error>\n        )}\n        {response.response && (\n          <Table>\n            <Thead>\n              <tr>\n                <th onClick={() => sortTable('date', orderCountry)}>\n                  <FormattedMessage id=\"date\" defaultMessage=\"Date\" />\n                </th>\n                <th onClick={() => sortTable('cases', orderCases)}>\n                  <FormattedMessage\n                    id=\"casesNew\"\n                    defaultMessage=\"Cases (New)\"\n                  />\n                </th>\n                <th onClick={() => sortTable('recovered', orderRecovered)}>\n                  <FormattedMessage\n                    id=\"recoveredNew\"\n                    defaultMessage=\"Recovered (New)\"\n                  />\n                </th>\n                <th onClick={() => sortTable('deaths', orderDeaths)}>\n                  <FormattedMessage\n                    id=\"deathsNew\"\n                    defaultMessage=\"Deaths (New)\"\n                  />\n                </th>\n              </tr>\n            </Thead>\n            <Tbody>\n              {data.map(({ time, cases, deaths }) => (\n                <tr key={time}>\n                  <td>\n                    <FormattedDate value={DayBack(time, 1)} />\n                  </td>\n                  <td>\n                    <FormattedNumber value={cases.total} />\n                    {cases.new !== null && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={cases.new} />)\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <FormattedNumber value={cases.recovered} />\n                    {cases.recovered_new !== 0 && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={cases.recovered_new} />)\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <FormattedNumber value={deaths.total} />\n                    {deaths.new !== null && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={deaths.new} />)\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </Tbody>\n          </Table>\n        )}\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default TableComponent\n","const theme = {\n  danger: '#fb0404',\n  success: '#43a047',\n  info: '#2b0ba8',\n  baseline1: '#1f1f1f',\n  baseline2: '#121212',\n  bgSite: '#F6F6F6',\n  surface: '#b5b5b5',\n  themeToggle: '#ffaa00',\n}\n\nexport default theme\n","const theme = {\n  danger: '#fb0404',\n  success: '#43a047',\n  info: '#ffaa00',\n  bgSite: '#121212',\n  surface: '#1f1f1f',\n  baseline1: '#E1E1E1',\n  baseline2: '#A5A5A5',\n  themeToggle: '#ffaa00',\n}\n\nexport default theme\n","export const saveToLocalStorage = (name, obj) =>\n  localStorage.setItem(name, JSON.stringify(obj))\n\nexport const getFromLocalStorage = name =>\n  JSON.parse(localStorage.getItem(name))\n\nexport const removeFromLocalStorage = name => localStorage.removeItem(name)\n","import React, { useState, useEffect, createContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport LightTheme from '../themes/LightTheme'\nimport DarkTheme from '../themes/DarkTheme'\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n} from '../helpers/LocalStorage'\n\nconst Context = createContext()\n\nconst themes = {\n  dark: {\n    mode: 'dark',\n    pallete: DarkTheme,\n  },\n  light: {\n    mode: 'light',\n    pallete: LightTheme,\n  },\n}\n\nconst ThemeProviderWrapper = ({ children }) => {\n  const localStorage = getFromLocalStorage('theme')\n  const [theme, setTheme] = useState({\n    mode: localStorage ? themes[localStorage].mode : themes.dark.mode,\n    pallete: localStorage ? themes[localStorage].pallete : themes.dark.pallete,\n    switchTo: param => setTheme({ ...theme, ...themes[param] }),\n  })\n\n  useEffect(() => {\n    saveToLocalStorage('theme', theme.mode)\n  }, [theme])\n\n  const { pallete } = theme\n\n  return (\n    <Context.Provider value={theme}>\n      <ThemeProvider theme={pallete}>{children}</ThemeProvider>\n    </Context.Provider>\n  )\n}\n\nexport { ThemeProviderWrapper, Context as ThemeContext }\n","import styled from 'styled-components'\n\nconst size = `2rem`\nconst raySize = `calc(${size} * -0.4)`\nconst offsetOrthogonal = `calc(${size} * 0.65)`\nconst offsetDiagonal = `calc(${size} * 0.45)`\n\nconst Label = styled.label`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n`\n\nconst Toggle = styled.input.attrs({ type: 'checkbox' })`\n  width: ${size};\n  height: ${size};\n  appearance: none;\n  cursor: pointer;\n  border-radius: 1rem;\n  color: ${({ theme }) => theme.themeToggle};\n  transition: all 500ms;\n  box-shadow: ${({ active }) =>\n    active === 'light'\n      ? `inset calc(2rem * 0.33) calc(2rem * -0.25) 0`\n      : `\n      inset 0 0 0 ${size},\n      calc(${offsetOrthogonal} * -1) 0 0 ${raySize},\n      ${offsetOrthogonal} 0 0 ${raySize},\n      0 calc(${offsetOrthogonal} * -1) 0 ${raySize},\n      0 ${offsetOrthogonal} 0 ${raySize},\n      calc(${offsetDiagonal} * -1) calc(${offsetDiagonal} * -1) 0 ${raySize},\n      ${offsetDiagonal} ${offsetDiagonal} 0 ${raySize},\n      calc(${offsetDiagonal} * -1) ${offsetDiagonal} 0 ${raySize},\n      ${offsetDiagonal} calc(${offsetDiagonal} * -1) 0 ${raySize}\n  `};\n`\n\nexport { Label, Toggle }\n","import React, { useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { ThemeContext } from '../../context/ThemeContext'\nimport { Toggle, Label } from './ToggleTheme.style'\n\nconst ToggleTheme = () => {\n  const { switchTo, mode } = useContext(ThemeContext)\n  const statement = mode === 'dark' ? 'light' : 'dark'\n  return (\n    <>\n      <Label htmlFor=\"themeToggle\">\n        <FormattedMessage id=\"chooseTheme\" defaultMessage=\"Choose theme\" />\n      </Label>\n      <Toggle\n        id=\"themeToggle\"\n        active={mode}\n        onClick={() => switchTo(statement)}\n      />\n    </>\n  )\n}\n\nexport default ToggleTheme\n","import React, { useState, createContext, useEffect } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport localesEn from '../locales/en.json'\nimport localesPl from '../locales/pl.json'\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n} from '../helpers/LocalStorage'\n\nconst Context = createContext()\n\nconst locales = {\n  en: {\n    locale: 'en',\n    messages: localesEn,\n  },\n  pl: {\n    locale: 'pl',\n    messages: localesPl,\n  },\n}\nconst language = window.navigator.language || 'en'\nconst [languageWithoutRegionCode] = language.toLowerCase().split('-')\n\nconst IntlProviderWrapper = ({ children }) => {\n  const localStorage = getFromLocalStorage('lang')\n  const [state, setState] = useState({\n    locale: localStorage\n      ? locales[localStorage].locale\n      : languageWithoutRegionCode,\n    messages: localStorage\n      ? locales[localStorage].messages\n      : locales[languageWithoutRegionCode].messages,\n    switchTo: param => setState({ ...state, ...locales[param] }),\n  })\n\n  useEffect(() => {\n    saveToLocalStorage('lang', state.locale)\n  }, [state])\n\n  const { locale, messages } = state\n  return (\n    <Context.Provider value={state}>\n      <IntlProvider locale={locale} messages={messages} defaultLocale=\"en\">\n        {children}\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport { IntlProviderWrapper, Context as IntlContext }\n","import styled from 'styled-components'\n\nconst Select = styled.select`\n  border: 1px solid ${({ theme }) => theme.bgSite};\n  background-color: ${({ theme }) => theme.baseline1};\n  color: ${({ theme }) => theme.surface};\n  padding: 0.5rem;\n`\n\nconst Option = styled.option`\n  margin: 0.5rem;\n`\n\nexport { Select, Option }\n","import React, { useState } from 'react'\nimport { IntlContext } from '../../context/LangContext'\nimport { Select, Option } from './SelectLang.style'\n\nconst LanguageSwitch = () => {\n  const { switchTo, locale } = React.useContext(IntlContext)\n  const [selectedLanguage, setSelectedLanguage] = useState(locale)\n\n  const changeLanguage = param => {\n    setSelectedLanguage(param)\n    switchTo(param)\n  }\n\n  return (\n    <>\n      <Select\n        id=\"selectLang\"\n        defaultValue={selectedLanguage}\n        onInput={event => changeLanguage(event.target.value)}>\n        <Option value=\"en\">English</Option>\n        <Option value=\"pl\">Polish</Option>\n      </Select>\n    </>\n  )\n}\n\nexport default LanguageSwitch\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 14rem;\n`\n\nexport default Wrapper\n","import React from 'react'\nimport ToggleTheme from '../toggleTheme/ToggleTheme'\nimport LanguageSwitch from '../selectLang/SelectLang'\nimport Wrapper from './Navigation.style'\n\nconst Navigation = () => {\n  return (\n    <Wrapper>\n      <ToggleTheme />\n      <LanguageSwitch />\n    </Wrapper>\n  )\n}\n\nexport default Navigation\n","import React, { useState } from 'react'\nimport FooterComponent from '../../components/footer/Footer'\nimport Header from '../../components/header/Header'\nimport SelectCountry from '../../components/selectCountry/SelectCountry'\nimport TableCountries from '../../components/tableCountries/TableCountries'\nimport Stats from '../../components/Stats/Stats'\nimport TableComponent from '../../components/tableCountryHistory/TableCountryHistory'\nimport Navigation from '../../components/navigation/Navigation'\n\nconst Statistics = () => {\n  const [country, setCountry] = useState('all')\n\n  const handleCountryChange = (prop = 'all') => {\n    setCountry(prop)\n  }\n  return (\n    <>\n      <Header handleCountryChange={handleCountryChange}>\n        <Navigation />\n      </Header>\n      <SelectCountry\n        handleCountryChange={handleCountryChange}\n        selectCountry={country}\n      />\n      <Stats localisation={country} />\n      {country === 'all' ? (\n        <TableCountries handleCountryChange={handleCountryChange} />\n      ) : (\n        <TableComponent localisation={country} />\n      )}\n\n      <FooterComponent />\n    </>\n  )\n}\n\nexport default Statistics\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport GlobalStyle from '../../themes/GlobalStyle'\nimport Statistics from '../Statistics/Statistics'\nimport { ThemeProviderWrapper } from '../../context/ThemeContext'\nimport { IntlProviderWrapper } from '../../context/LangContext'\n\nconst Root = () => {\n  return (\n    <IntlProviderWrapper>\n      <ThemeProviderWrapper>\n        <GlobalStyle />\n        <BrowserRouter basename=\"covid-19-stats\">\n          <Route path=\"/\" component={Statistics} exact />\n        </BrowserRouter>\n      </ThemeProviderWrapper>\n    </IntlProviderWrapper>\n  )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './views/Root/Root'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}