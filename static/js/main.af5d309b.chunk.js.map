{"version":3,"sources":["themes/GlobalStyle.js","components/footer/Footer.style.js","components/footer/Footer.js","components/header/Header.style.js","components/header/Header.js","components/selectCountry/SelectCountry.style.js","helpers/RequestCovidApi.js","helpers/replace.js","helpers/fetchData.js","components/errors/Errors.style.js","components/errors/Errors.js","components/selectCountry/SelectCountry.js","components/Stats/Stats.style.js","components/tile/Tile.style.js","components/tile/Tile.js","components/Stats/Stats.js","components/tableCountryHistory/TableCountryHistory.style.js","helpers/DateTime.js","components/tableCountryHistory/TableCountryHistory.js","themes/LightTheme.js","themes/DarkTheme.js","helpers/LocalStorage.js","context/ThemeContext.js","components/toggleTheme/ToggleTheme.style.js","components/toggleTheme/ToggleTheme.js","context/LangContext.js","components/selectLang/SelectLang.style.js","components/selectLang/SelectLang.js","components/navigation/Navigation.style.js","components/navigation/Navigation.js","components/Loader/Loader.style.js","components/Loader/Loader.js","constants/constants.js","components/statisticsTable/statisticsTable.style.js","components/statisticsTable/statisticsTable.js","components/toggleableCountriesContinentsStats/ToggleableCountriesContinentsStats.style.js","components/toggleableCountriesContinentsStats/ToggleableCountriesContinentsStats.js","components/calculationOfData/CalculationOfData.style.js","helpers/countPercent.js","components/calculationOfData/CalculationOfData.js","views/Statistics/Statistics.js","views/Root/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","bgSite","baseline1","Footer","styled","footer","Paragraph","p","Anchor","a","baseline2","FooterComponent","id","defaultMessage","href","Header","header","HeaderComponent","children","handleCountryChange","to","onClick","Select","select","Request","path","headers","process","fetch","method","response","replace","string","searchValue","newValue","all","RegExp","api","dataSetter","errorsSetter","loadingSetter","res","json","fetchData","Container","div","errors","SelectCountry","props","selectCountry","useState","countries","setCountries","setErrors","selectedCountry","setSelectedCountry","useEffect","onInput","event","target","value","txt","key","map","country","msg","CasesGroup","border","surface","row","Headline","h2","LastUpdate","span","type","danger","success","info","Div","rowAll","H3","h3","H4","h4","Tile","title","large","GlobalStats","localisation","data","setData","setCorrectValue","param","cases","deaths","time","tests","Date","new","total","active","recovered","Table","table","Thead","thead","Tbody","tbody","Wrapper","checkValue","DayBack","date","back","d","setDate","getDate","day","month","getMonth","year","getFullYear","TableComponent","setResponse","orderCountry","setOrderCountry","orderCases","setOrderCases","orderDeaths","setOrderDeaths","orderRecovered","setOrderRecovered","addFieldNewRecoveredToObject","reverse","filter","index","self","findIndex","s","slice","arr","recovered_new","sliceElementToShow","sortTable","what","order","temps","sort","b","getTime","values","number","themeToggle","saveToLocalStorage","name","obj","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","Context","createContext","themes","dark","mode","pallete","DarkTheme","light","LightTheme","ThemeProviderWrapper","switchTo","setTheme","Provider","raySize","offsetOrthogonal","offsetDiagonal","Label","label","Toggle","input","attrs","ToggleTheme","useContext","ThemeContext","statement","htmlFor","locales","en","locale","messages","localesEn","pl","localesPl","window","navigator","language","toLowerCase","split","languageWithoutRegionCode","IntlProviderWrapper","setState","state","defaultLocale","Option","option","LanguageSwitch","React","IntlContext","selectedLanguage","setSelectedLanguage","defaultValue","Navigation","LoaderComponent","color","height","width","CONTINENTS","Th","th","isEvent","Td","td","pointer","StatisticsTable","dataArray","role","onKeyPress","NavTabs","ul","li","isActive","Tabs","Tab","CountriesContinentsStats","resp","setResp","continents","setContinents","loading","setLoading","setIsActive","tempCountries","tempContinents","el","includes","push","Loader","countPercent","percentFor","percentOf","decimalPlace","toFixed","CalculationOfData","Statistics","setCountry","prop","Stats","ToggleableCountriesContinentsStats","Root","basename","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af5d309b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n*, *::before, *::after {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  font-family: 'Lato', sans-serif;\n  font-size: 1.6rem;\n  background-color: ${({ theme }) => theme.bgSite};\n  color: ${({ theme }) => theme.baseline1};\n  max-width: 80rem;\n  margin: 0 auto;\n  padding: 0 1.5rem;\n}\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nconst Footer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 1.5rem 0;\n`\n\nconst Paragraph = styled.p`\n  font-size: 1.2rem;\n  line-height: 1.6;\n`\n\nconst Anchor = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.baseline2};\n`\n\nexport { Footer, Paragraph, Anchor }\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Footer, Paragraph, Anchor } from './Footer.style'\n\nconst FooterComponent = () => {\n  return (\n    <Footer>\n      <Paragraph>\n        <FormattedMessage id=\"createdBy\" defaultMessage=\"Created by \" />{' '}\n        <Anchor href=\"#\">Karol Wolski</Anchor>.\n      </Paragraph>\n      <Paragraph>\n        <FormattedMessage id=\"poweredBy\" defaultMessage=\"Powered by \" />{' '}\n        <Anchor href=\"https://rapidapi.com/api-sports/api/covid-193\">\n          COVID-19 Api\n        </Anchor>\n      </Paragraph>\n    </Footer>\n  )\n}\n\nexport default FooterComponent\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 5rem;\n  margin: 1.5rem 0;\n\n  h1 {\n    font-size: 2.4rem;\n\n    @media (min-width: 640px) {\n      font-size: 3rem;\n    }\n\n    a {\n      text-decoration: none;\n      color: ${({ theme }) => theme.baseline1};\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'react-router-dom'\nimport Header from './Header.style'\n\nconst HeaderComponent = ({ children, handleCountryChange }) => {\n  return (\n    <Header>\n      <h1>\n        <Link to=\"/\" onClick={() => handleCountryChange('all')}>\n          <FormattedMessage\n            id=\"pageTitle\"\n            defaultMessage=\"Covid-19 Statistics\"\n          />\n        </Link>\n      </h1>\n      {children}\n    </Header>\n  )\n}\n\nexport default HeaderComponent\n","import styled from 'styled-components'\n\nconst Select = styled.select`\n  width: 100%;\n  margin: 1rem 0;\n  padding: 1rem;\n`\n\nexport default Select\n","const Request = async path => {\n  const method = 'GET'\n  const headers = {\n    'x-rapidapi-host': process.env.REACT_APP_COVID19_API_HOST,\n    'x-rapidapi-key': process.env.REACT_APP_COVID19_API_KEY,\n  }\n  const response = await fetch(\n    `${process.env.REACT_APP_COVID19_API_URL}${path}`,\n    {\n      headers,\n      method,\n    }\n  )\n  return response\n}\n\nexport default Request\n","const replace = (string, searchValue, newValue, all = false) =>\n  all\n    ? string.replace(new RegExp(searchValue, 'g'), newValue)\n    : string.replace(searchValue, newValue)\n\nexport default replace\n","async function fetchData(\n  api,\n  Request,\n  dataSetter,\n  errorsSetter,\n  loadingSetter\n) {\n  try {\n    errorsSetter(false)\n    const res = await Request(api)\n    const json = await res.json()\n    dataSetter(json)\n    if (loadingSetter) loadingSetter(false)\n  } catch (err) {\n    if (loadingSetter) loadingSetter(false)\n    errorsSetter(true)\n  }\n}\n\nexport default fetchData\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n  text-align: center;\n`\n\nexport default Container\n","import React from 'react'\nimport Container from './Errors.style'\n\nconst errors = ({ children }) => <Container>{children}</Container>\n\nexport default errors\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport Select from './SelectCountry.style'\nimport Request from '../../helpers/RequestCovidApi'\nimport replace from '../../helpers/replace'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\n\nconst SelectCountry = props => {\n  const { handleCountryChange, selectCountry } = props\n  const [countries, setCountries] = useState([])\n  const [errors, setErrors] = useState(false)\n  const [selectedCountry, setSelectedCountry] = useState()\n\n  useEffect(() => {\n    fetchData('/countries', Request, setCountries, setErrors)\n  }, [])\n\n  useEffect(() => {\n    return selectCountry === 'all'\n      ? setSelectedCountry('Select country')\n      : setSelectedCountry(selectCountry)\n  }, [selectCountry])\n\n  return (\n    <div>\n      <Select\n        id=\"countries\"\n        onInput={event => handleCountryChange(event.target.value)}\n        value={selectedCountry}>\n        <FormattedMessage id=\"selectCountry\" defaultMessage=\"Select Country\">\n          {txt => (\n            <option key=\"select\" value=\"all\">\n              {txt}\n            </option>\n          )}\n        </FormattedMessage>\n        {countries.response &&\n          countries.response.map(\n            country =>\n              country !== 'all' && (\n                <FormattedMessage\n                  id={country}\n                  defaultMessage={country}\n                  key={country}>\n                  {msg => (\n                    <option value={country}>\n                      {replace(msg, '-', ' ', true)}\n                    </option>\n                  )}\n                </FormattedMessage>\n              )\n          )}\n      </Select>\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n    </div>\n  )\n}\n\nexport default SelectCountry\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1.5rem 0;\n`\n\nconst CasesGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  ${({ border, theme }) =>\n    border &&\n    `\n      border-bottom: 1px dashed;\n      border-color: ${theme.surface};\n  `}\n\n  @media (min-width: 360px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(${({ row }) => row}, 1fr);\n  }\n`\n\nconst Headline = styled.h2`\n  margin: 1rem 0;\n`\n\nconst Paragraph = styled.p`\n  text-align: center;\n  font-size: 1.8rem;\n  padding: 1rem 0;\n`\n\nconst Cases = styled.span`\n  display: block;\n  font-weight: 700;\n  font-size: 5rem;\n  margin-right: 1rem;\n`\n\nconst LastUpdate = styled.p`\n  font-size: 1.2rem;\n`\n\nconst Info = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1.6rem;\n  color: ${({ theme, type }) => {\n    if (type === 'danger') {\n      return theme.danger\n    }\n    if (type === 'success') {\n      return theme.success\n    }\n    if (type === 'info') {\n      return theme.info\n    }\n    return theme.baseline1\n  }};\n\n  span {\n    display: block;\n  }\n`\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nexport {\n  Container,\n  CasesGroup,\n  Paragraph,\n  Headline,\n  Info,\n  Div,\n  Cases,\n  LastUpdate,\n}\n","import styled from 'styled-components'\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1.5rem;\n  margin: 1.5rem 0;\n\n  ${({ rowAll }) =>\n    rowAll &&\n    `\n    @media(min-width: 360px) and (max-width: 767px) {\n      grid-column-start: 1;\n      grid-column-end: 4;\n    }\n  `}\n`\n\nconst H3 = styled.h3`\n  font-weight: 700;\n  font-size: 2.8rem;\n`\n\nconst H4 = styled.h4`\n  font-size: 1.87rem;\n`\n\nconst Paragraph = styled.p`\n  font-weight: 700;\n  font-size: 2.8rem;\n  color: ${({ theme, type }) => {\n    if (type === 'danger') {\n      return theme.danger\n    }\n    if (type === 'success') {\n      return theme.success\n    }\n    return theme.baseline1\n  }};\n`\nexport { Div, Paragraph, H3, H4 }\n","import React from 'react'\nimport { FormattedMessage, FormattedNumber } from 'react-intl'\nimport { Div, Paragraph, H3, H4 } from './Tile.style'\n\nconst Tile = ({ title, value = 0, type, rowAll, large }) => {\n  return (\n    <Div rowAll={rowAll}>\n      {large ? (\n        <H3>\n          <FormattedMessage id={title} defaultMessage={title} />\n        </H3>\n      ) : (\n        <H4>\n          <FormattedMessage id={title} defaultMessage={title} />\n        </H4>\n      )}\n      {!large && (\n        <Paragraph type={type}>\n          <FormattedNumber value={value} />\n        </Paragraph>\n      )}\n    </Div>\n  )\n}\n\nexport default Tile\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedTime } from 'react-intl'\nimport { Container, CasesGroup, Headline, LastUpdate } from './Stats.style'\nimport Tile from '../tile/Tile'\nimport Request from '../../helpers/RequestCovidApi'\nimport replace from '../../helpers/replace'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\n\nconst GlobalStats = ({ localisation }) => {\n  const [data, setData] = useState([])\n  const [errors, setErrors] = useState()\n\n  useEffect(() => {\n    fetchData(\n      `/statistics?country=${localisation}`,\n      Request,\n      setData,\n      setErrors\n    )\n  }, [localisation])\n\n  const setCorrectValue = param =>\n    param !== null ? param.replace(/[^a-zA-Z0-9 ]/g, '') : 0\n\n  return (\n    <>\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n      {data.response &&\n        data.response.map(({ country, cases, deaths, time, tests }) => (\n          <Container key={country}>\n            <Headline>\n              {country === 'All' ? (\n                <FormattedMessage\n                  id=\"worldStats\"\n                  defaultMessage=\"World Stats\"\n                />\n              ) : (\n                <>\n                  <FormattedMessage id={country} defaultMessage={country}>\n                    {txt => `${replace(txt, '-', ' ', true)}`}\n                  </FormattedMessage>\n                </>\n              )}\n            </Headline>\n            <LastUpdate>\n              <FormattedMessage id=\"lastUpdate\" defaultMessage=\"Last update\" />{' '}\n              <FormattedTime value={new Date(time)} />\n            </LastUpdate>\n            <CasesGroup row=\"3\" border>\n              <Tile title=\"today\" large rowAll />\n              <Tile title=\"detected\" value={setCorrectValue(cases.new)} />\n              <Tile\n                type=\"danger\"\n                title=\"deaths\"\n                value={setCorrectValue(deaths.new)}\n              />\n            </CasesGroup>\n            <CasesGroup row=\"3\" border>\n              <Tile title=\"total\" large rowAll />\n              <Tile title=\"detected\" value={cases.total} />\n              <Tile type=\"danger\" title=\"deaths\" value={deaths.total} />\n            </CasesGroup>\n            <CasesGroup row=\"3\" border={tests.total > 0}>\n              <Tile title=\"cases\" large rowAll />\n              <Tile title=\"active\" value={cases.active} />\n              <Tile type=\"success\" title=\"recovered\" value={cases.recovered} />\n            </CasesGroup>\n            {tests.total > 0 && (\n              <CasesGroup row=\"3\">\n                <Tile title=\"tests\" large rowAll />\n                <Tile title=\"total\" value={tests.total} />\n              </CasesGroup>\n            )}\n          </Container>\n        ))}\n    </>\n  )\n}\n\nexport default GlobalStats\n","import styled from 'styled-components'\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 1.5rem 0;\n  text-align: center;\n`\n\nconst Thead = styled.thead`\n  th {\n    padding: 1rem 0;\n    cursor: pointer;\n  }\n`\n\nconst Tbody = styled.tbody`\n  tr:nth-of-type(odd) {\n    background: ${({ theme }) => theme.surface};\n  }\n\n  td {\n    padding: 1rem 0;\n\n    span {\n      color: ${({ theme }) => theme.baseline1};\n      display: block;\n      margin-top: 0.5rem;\n      @media (min-width: 640px) {\n        display: inline-block;\n        margin: 0 0 0 1rem;\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n  overflow-x: auto;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport { Table, Thead, Tbody, Container, Wrapper }\n","const checkValue = param => (param < 10 ? `0${param}` : param)\n\nexport const DateTime = param => {\n  const date = new Date(param)\n  const day = checkValue(date.getDate())\n  const month = checkValue(date.getMonth() + 1)\n  const year = checkValue(date.getFullYear())\n  const hour = checkValue(date.getHours())\n  const minutes = checkValue(date.getMinutes())\n  return `${day}.${month}.${year} ${hour}:${minutes}`\n}\n\nexport const DayBack = (date, back) => {\n  const d = new Date(date)\n  d.setDate(d.getDate() - back)\n  const day = checkValue(d.getDate())\n  const month = checkValue(d.getMonth() + 1)\n  const year = checkValue(d.getFullYear())\n  return `${month}.${day}.${year}`\n}\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedNumber, FormattedDate } from 'react-intl'\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Container,\n  Wrapper,\n} from './TableCountryHistory.style'\nimport Request from '../../helpers/RequestCovidApi'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\nimport { DayBack } from '../../helpers/DateTime'\n\nconst TableComponent = ({ localisation }) => {\n  const [response, setResponse] = useState([])\n  const [data, setData] = useState([])\n  const [errors, setErrors] = useState()\n  const [orderCountry, setOrderCountry] = useState(false)\n  const [orderCases, setOrderCases] = useState(false)\n  const [orderDeaths, setOrderDeaths] = useState(false)\n  const [orderRecovered, setOrderRecovered] = useState(false)\n  const numOfRecords = 11\n  const numOfRecordsToShow = 10\n\n  useEffect(() => {\n    fetchData(\n      `/history?country=${localisation}`,\n      Request,\n      setResponse,\n      setErrors\n    )\n  }, [localisation])\n\n  useEffect(() => {\n    if (typeof response.response !== 'undefined') {\n      const getFirstObjectWithEveryDay = response.response\n        .reverse()\n        .filter(\n          (res, index, self) => index === self.findIndex(s => s.day === res.day)\n        )\n        .reverse()\n\n      const sliceElementsWithArray = getFirstObjectWithEveryDay.slice(\n        0,\n        numOfRecords\n      )\n      const addFieldNewRecoveredToObject = sliceElementsWithArray\n      addFieldNewRecoveredToObject.reverse().map(({ cases }, index, arr) => {\n        if (index > 0)\n          addFieldNewRecoveredToObject[index].cases.recovered_new =\n            cases.recovered - arr[index - 1].cases.recovered\n        return addFieldNewRecoveredToObject\n      })\n\n      const reverseArray = addFieldNewRecoveredToObject.reverse()\n\n      const sliceElementToShow = reverseArray.slice(0, numOfRecordsToShow)\n      setData(sliceElementToShow)\n    }\n  }, [response])\n\n  const sortTable = (what, order) => {\n    const temps = data\n    if (what === 'date') {\n      temps.sort((a, b) =>\n        order\n          ? new Date(a.day).getTime() - new Date(b.day).getTime()\n          : new Date(b.day).getTime() - new Date(a.day).getTime()\n      )\n      setOrderCountry(!order)\n    } else if (what === 'cases') {\n      temps.sort((a, b) =>\n        order ? a.cases.total - b.cases.total : b.cases.total - a.cases.total\n      )\n      setOrderCases(!order)\n    } else if (what === 'recovered') {\n      temps.sort((a, b) =>\n        order\n          ? a.cases.recovered - b.cases.recovered\n          : b.cases.recovered - a.cases.recovered\n      )\n      setOrderRecovered(!order)\n    } else if (what === 'deaths') {\n      temps.sort((a, b) =>\n        order\n          ? a.deaths.total - b.deaths.total\n          : b.deaths.total - a.deaths.total\n      )\n      setOrderDeaths(!order)\n    }\n    setData(temps)\n  }\n\n  return (\n    <Wrapper>\n      <h3>\n        <FormattedMessage\n          id=\"lastDays\"\n          defaultMessage=\"Last {number} days\"\n          values={{\n            number: '10',\n          }}\n        />\n      </h3>\n      <Container>\n        {errors && (\n          <Error>\n            <FormattedMessage\n              id=\"errorServer\"\n              defaultMessage=\"An error has occurred from the server, please come back later.\"\n            />\n          </Error>\n        )}\n        {response.response && (\n          <Table>\n            <Thead>\n              <tr>\n                <th onClick={() => sortTable('date', orderCountry)}>\n                  <FormattedMessage id=\"date\" defaultMessage=\"Date\" />\n                </th>\n                <th onClick={() => sortTable('cases', orderCases)}>\n                  <FormattedMessage\n                    id=\"casesNew\"\n                    defaultMessage=\"Cases (New)\"\n                  />\n                </th>\n                <th onClick={() => sortTable('recovered', orderRecovered)}>\n                  <FormattedMessage\n                    id=\"recoveredNew\"\n                    defaultMessage=\"Recovered (New)\"\n                  />\n                </th>\n                <th onClick={() => sortTable('deaths', orderDeaths)}>\n                  <FormattedMessage\n                    id=\"deathsNew\"\n                    defaultMessage=\"Deaths (New)\"\n                  />\n                </th>\n              </tr>\n            </Thead>\n            <Tbody>\n              {data.map(({ time, cases, deaths }) => (\n                <tr key={time}>\n                  <td>\n                    <FormattedDate value={DayBack(time, 1)} />\n                  </td>\n                  <td>\n                    <FormattedNumber value={cases.total} />\n                    {cases.new !== null && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={cases.new} />)\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <FormattedNumber value={cases.recovered} />\n                    {cases.recovered_new !== 0 && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={cases.recovered_new} />)\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <FormattedNumber value={deaths.total} />\n                    {deaths.new !== null && (\n                      <span>\n                        {' '}\n                        (<FormattedNumber value={deaths.new} />)\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </Tbody>\n          </Table>\n        )}\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default TableComponent\n","const theme = {\n  danger: '#fb0404',\n  success: '#43a047',\n  info: '#0064ff',\n  baseline1: '#1f1f1f',\n  baseline2: '#121212',\n  bgSite: '#F6F6F6',\n  surface: '#b5b5b5',\n  themeToggle: '#ffaa00',\n}\n\nexport default theme\n","const theme = {\n  danger: '#fb0404',\n  success: '#43a047',\n  info: '#ffaa00',\n  bgSite: '#121212',\n  surface: '#1f1f1f',\n  baseline1: '#E1E1E1',\n  baseline2: '#A5A5A5',\n  themeToggle: '#ffaa00',\n}\n\nexport default theme\n","export const saveToLocalStorage = (name, obj) =>\n  localStorage.setItem(name, JSON.stringify(obj))\n\nexport const getFromLocalStorage = name =>\n  JSON.parse(localStorage.getItem(name))\n\nexport const removeFromLocalStorage = name => localStorage.removeItem(name)\n","import React, { useState, useEffect, createContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport LightTheme from '../themes/LightTheme'\nimport DarkTheme from '../themes/DarkTheme'\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n} from '../helpers/LocalStorage'\n\nconst Context = createContext()\n\nconst themes = {\n  dark: {\n    mode: 'dark',\n    pallete: DarkTheme,\n  },\n  light: {\n    mode: 'light',\n    pallete: LightTheme,\n  },\n}\n\nconst ThemeProviderWrapper = ({ children }) => {\n  const localStorage = getFromLocalStorage('theme')\n  const [theme, setTheme] = useState({\n    mode: localStorage ? themes[localStorage].mode : themes.dark.mode,\n    pallete: localStorage ? themes[localStorage].pallete : themes.dark.pallete,\n    switchTo: param => setTheme({ ...theme, ...themes[param] }),\n  })\n\n  useEffect(() => {\n    saveToLocalStorage('theme', theme.mode)\n  }, [theme])\n\n  const { pallete } = theme\n\n  return (\n    <Context.Provider value={theme}>\n      <ThemeProvider theme={pallete}>{children}</ThemeProvider>\n    </Context.Provider>\n  )\n}\n\nexport { ThemeProviderWrapper, Context as ThemeContext }\n","import styled from 'styled-components'\n\nconst size = `2rem`\nconst raySize = `calc(${size} * -0.4)`\nconst offsetOrthogonal = `calc(${size} * 0.65)`\nconst offsetDiagonal = `calc(${size} * 0.45)`\n\nconst Label = styled.label`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n`\n\nconst Toggle = styled.input.attrs({ type: 'checkbox' })`\n  width: ${size};\n  height: ${size};\n  appearance: none;\n  cursor: pointer;\n  border-radius: 1rem;\n  color: ${({ theme }) => theme.themeToggle};\n  transition: all 500ms;\n  box-shadow: ${({ active }) =>\n    active === 'light'\n      ? `inset calc(2rem * 0.33) calc(2rem * -0.25) 0`\n      : `\n      inset 0 0 0 ${size},\n      calc(${offsetOrthogonal} * -1) 0 0 ${raySize},\n      ${offsetOrthogonal} 0 0 ${raySize},\n      0 calc(${offsetOrthogonal} * -1) 0 ${raySize},\n      0 ${offsetOrthogonal} 0 ${raySize},\n      calc(${offsetDiagonal} * -1) calc(${offsetDiagonal} * -1) 0 ${raySize},\n      ${offsetDiagonal} ${offsetDiagonal} 0 ${raySize},\n      calc(${offsetDiagonal} * -1) ${offsetDiagonal} 0 ${raySize},\n      ${offsetDiagonal} calc(${offsetDiagonal} * -1) 0 ${raySize}\n  `};\n`\n\nexport { Label, Toggle }\n","import React, { useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { ThemeContext } from '../../context/ThemeContext'\nimport { Toggle, Label } from './ToggleTheme.style'\n\nconst ToggleTheme = () => {\n  const { switchTo, mode } = useContext(ThemeContext)\n  const statement = mode === 'dark' ? 'light' : 'dark'\n  return (\n    <>\n      <Label htmlFor=\"themeToggle\">\n        <FormattedMessage id=\"chooseTheme\" defaultMessage=\"Choose theme\" />\n      </Label>\n      <Toggle\n        id=\"themeToggle\"\n        active={mode}\n        onClick={() => switchTo(statement)}\n      />\n    </>\n  )\n}\n\nexport default ToggleTheme\n","import React, { useState, createContext, useEffect } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport localesEn from '../locales/en.json'\nimport localesPl from '../locales/pl.json'\nimport {\n  saveToLocalStorage,\n  getFromLocalStorage,\n} from '../helpers/LocalStorage'\n\nconst Context = createContext()\n\nconst locales = {\n  en: {\n    locale: 'en',\n    messages: localesEn,\n  },\n  pl: {\n    locale: 'pl',\n    messages: localesPl,\n  },\n}\nconst language = window.navigator.language || 'en'\nconst [languageWithoutRegionCode] = language.toLowerCase().split('-')\n\nconst IntlProviderWrapper = ({ children }) => {\n  const localStorage = getFromLocalStorage('lang')\n  const [state, setState] = useState({\n    locale: localStorage\n      ? locales[localStorage].locale\n      : languageWithoutRegionCode,\n    messages: localStorage\n      ? locales[localStorage].messages\n      : locales[languageWithoutRegionCode].messages,\n    switchTo: param => setState({ ...state, ...locales[param] }),\n  })\n\n  useEffect(() => {\n    saveToLocalStorage('lang', state.locale)\n  }, [state])\n\n  const { locale, messages } = state\n  return (\n    <Context.Provider value={state}>\n      <IntlProvider locale={locale} messages={messages} defaultLocale=\"en\">\n        {children}\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport { IntlProviderWrapper, Context as IntlContext }\n","import styled from 'styled-components'\n\nconst Select = styled.select`\n  border: 1px solid ${({ theme }) => theme.bgSite};\n  background-color: ${({ theme }) => theme.baseline1};\n  color: ${({ theme }) => theme.surface};\n  padding: 0.5rem;\n`\n\nconst Option = styled.option`\n  margin: 0.5rem;\n`\n\nexport { Select, Option }\n","import React, { useState } from 'react'\nimport { IntlContext } from '../../context/LangContext'\nimport { Select, Option } from './SelectLang.style'\n\nconst LanguageSwitch = () => {\n  const { switchTo, locale } = React.useContext(IntlContext)\n  const [selectedLanguage, setSelectedLanguage] = useState(locale)\n\n  const changeLanguage = param => {\n    setSelectedLanguage(param)\n    switchTo(param)\n  }\n\n  return (\n    <>\n      <Select\n        id=\"selectLang\"\n        defaultValue={selectedLanguage}\n        onInput={event => changeLanguage(event.target.value)}>\n        <Option value=\"en\">English</Option>\n        <Option value=\"pl\">Polish</Option>\n      </Select>\n    </>\n  )\n}\n\nexport default LanguageSwitch\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 14rem;\n`\n\nexport default Wrapper\n","import React from 'react'\nimport ToggleTheme from '../toggleTheme/ToggleTheme'\nimport LanguageSwitch from '../selectLang/SelectLang'\nimport Wrapper from './Navigation.style'\n\nconst Navigation = () => {\n  return (\n    <Wrapper>\n      <ToggleTheme />\n      <LanguageSwitch />\n    </Wrapper>\n  )\n}\n\nexport default Navigation\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  background: ${({ theme }) => theme.bgSite};\n  z-index: 2;\n`\n\nexport default Wrapper\n","import React, { useContext } from 'react'\nimport Loader from 'react-loader-spinner'\nimport { ThemeContext } from 'styled-components'\nimport Wrapper from './Loader.style'\n\nconst LoaderComponent = () => {\n  const theme = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <Loader type=\"ThreeDots\" color={theme.info} height={75} width={75} />\n    </Wrapper>\n  )\n}\n\nexport default LoaderComponent\n","const CONTINENTS = [\n  'Europe',\n  'Oceania',\n  'North-America',\n  'South-America',\n  'Asia',\n  'Africa',\n]\n\nconst ENDPOINT_STATISTICS = '/statistics'\n\nexport { CONTINENTS, ENDPOINT_STATISTICS }\n","import styled from 'styled-components'\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 1.5rem 0;\n  text-align: center;\n`\n\nconst Th = styled.th`\n  padding: 1rem 0;\n  cursor: ${({ isEvent }) => (isEvent ? 'pointer' : 'cursor')};\n`\n\nconst Tbody = styled.tbody`\n  tr:nth-of-type(odd) {\n    background: ${({ theme }) => theme.surface};\n  }\n`\n\nconst Td = styled.td`\n  padding: 1rem;\n  ${({ pointer }) =>\n    pointer &&\n    `\n    cursor: pointer;\n    `}\n`\n\nconst Container = styled.div`\n  overflow-x: auto;\n  min-height: 20rem;\n  position: relative;\n`\n\nexport { Table, Th, Tbody, Td, Container }\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage, FormattedNumber } from 'react-intl'\nimport { Table, Tbody, Td, Th } from './statisticsTable.style'\nimport replace from '../../helpers/replace'\n\nconst StatisticsTable = ({ handleCountryChange, name, dataArray }) => {\n  const [data, setData] = useState([])\n  const [orderCases, setOrderCases] = useState(false)\n  const [orderDeaths, setOrderDeaths] = useState(false)\n  const [orderRecovered, setOrderRecovered] = useState(false)\n\n  useEffect(() => {\n    setData(dataArray)\n  }, [dataArray])\n\n  const sortTable = (what, order) => {\n    const temps = data\n    if (what === 'cases') {\n      temps.sort((a, b) =>\n        order ? a.cases.total - b.cases.total : b.cases.total - a.cases.total\n      )\n      setOrderCases(!order)\n    } else if (what === 'recovered') {\n      temps.sort((a, b) =>\n        order\n          ? a.cases.recovered - b.cases.recovered\n          : b.cases.recovered - a.cases.recovered\n      )\n      setOrderRecovered(!order)\n    } else if (what === 'deaths') {\n      temps.sort((a, b) =>\n        order\n          ? a.deaths.total - b.deaths.total\n          : b.deaths.total - a.deaths.total\n      )\n      setOrderDeaths(!order)\n    }\n    setData(temps)\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <Th>\n            <FormattedMessage id={name} defaultMessage={name} />\n          </Th>\n          <Th onClick={() => sortTable('cases', orderCases)} isEvent>\n            <FormattedMessage id=\"cases\" defaultMessage=\"Cases\" />\n          </Th>\n          <Th onClick={() => sortTable('recovered', orderRecovered)} isEvent>\n            <FormattedMessage id=\"recovered\" defaultMessage=\"Recovered\" />\n          </Th>\n          <Th onClick={() => sortTable('deaths', orderDeaths)} isEvent>\n            <FormattedMessage id=\"deaths\" defaultMessage=\"Deaths\" />\n          </Th>\n        </tr>\n      </thead>\n      <Tbody>\n        {data.map(({ country, cases, deaths }) => (\n          <tr key={country}>\n            <Td\n              pointer\n              role=\"gridcell\"\n              onClick={() => handleCountryChange(country)}\n              onKeyPress={() => handleCountryChange(country)}>\n              <FormattedMessage id={country} defaultMessage={country}>\n                {txt => replace(txt, '-', ' ', true)}\n              </FormattedMessage>\n            </Td>\n            <Td>\n              <FormattedNumber value={cases.total} />\n            </Td>\n            <Td>\n              <FormattedNumber value={cases.recovered} />\n            </Td>\n            <Td>\n              <FormattedNumber value={deaths.total} />\n            </Td>\n          </tr>\n        ))}\n      </Tbody>\n    </Table>\n  )\n}\n\nexport default StatisticsTable\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst NavTabs = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n`\n\nconst Option = styled.li`\n  width: 50%;\n  text-align: center;\n  cursor: pointer;\n  border-bottom: ${({ isActive }) => (isActive ? '2px solid' : 'unset')};\n  border-color: ${({ theme }) => theme.info};\n  padding: 1rem;\n`\n\nconst Tabs = styled.div`\n  overflow-x: auto;\n  min-height: 20rem;\n  position: relative;\n`\n\nconst Tab = styled.div`\n  display: ${({ isActive }) => (isActive ? 'block' : 'none')};\n`\n\nexport { Container, NavTabs, Option, Tabs, Tab }\n","import React, { useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport LoaderComponent from '../Loader/Loader'\nimport Request from '../../helpers/RequestCovidApi'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\nimport { CONTINENTS, ENDPOINT_STATISTICS } from '../../constants/constants'\nimport StatisticsTable from '../statisticsTable/statisticsTable'\nimport {\n  Container,\n  NavTabs,\n  Option,\n  Tabs,\n  Tab,\n} from './ToggleableCountriesContinentsStats.style'\n\nconst CountriesContinentsStats = ({ handleCountryChange }) => {\n  const [resp, setResp] = useState([])\n  const [countries, setCountries] = useState([])\n  const [continents, setContinents] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [errors, setErrors] = useState(false)\n  const [isActive, setIsActive] = useState(true)\n\n  useEffect(() => {\n    fetchData(ENDPOINT_STATISTICS, Request, setResp, setErrors, setLoading)\n  }, [])\n\n  useEffect(() => {\n    const tempCountries = []\n    const tempContinents = []\n    if (typeof resp.response !== 'undefined') {\n      const data = resp.response\n      data\n        .filter(el => el.country !== 'All')\n        .map(el =>\n          CONTINENTS.includes(el.country)\n            ? tempContinents.push(el)\n            : tempCountries.push(el)\n        )\n    }\n    setContinents(tempContinents)\n    setCountries(tempCountries)\n  }, [resp])\n\n  return (\n    <Container>\n      <NavTabs>\n        <Option isActive={isActive} onClick={() => setIsActive(!isActive)}>\n          <FormattedMessage id=\"countries\" defaultMessage=\"Countries\" />\n        </Option>\n        <Option isActive={!isActive} onClick={() => setIsActive(!isActive)}>\n          <FormattedMessage id=\"continents\" defaultMessage=\"Continents\" />\n        </Option>\n      </NavTabs>\n      <Tabs>\n        {loading && <LoaderComponent />}\n        {errors ? (\n          <Error>\n            <FormattedMessage\n              id=\"errorServer\"\n              defaultMessage=\"An error has occurred from the server, please come back later.\"\n            />\n          </Error>\n        ) : (\n          <>\n            <Tab isActive={isActive}>\n              <StatisticsTable\n                handleCountryChange={handleCountryChange}\n                dataArray={countries}\n                name=\"country\"\n              />\n            </Tab>\n            <Tab isActive={!isActive}>\n              <StatisticsTable\n                handleCountryChange={handleCountryChange}\n                dataArray={continents}\n                name=\"continent\"\n              />\n            </Tab>\n          </>\n        )}\n      </Tabs>\n    </Container>\n  )\n}\n\nexport default CountriesContinentsStats\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1.5rem 0;\n`\n\nconst Paragraph = styled.p`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 0.5rem 0;\n`\n\nexport { Container, Paragraph }\n","const countPercent = (percentFor, percentOf, decimalPlace = 0) =>\n  ((percentFor / percentOf) * 100).toFixed(decimalPlace)\n\nexport default countPercent\n","import React, { useState, useEffect } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport Request from '../../helpers/RequestCovidApi'\nimport fetchData from '../../helpers/fetchData'\nimport Error from '../errors/Errors'\nimport LoaderComponent from '../Loader/Loader'\nimport { Container, Paragraph } from './CalculationOfData.style'\nimport countPercent from '../../helpers/countPercent'\n\nconst CalculationOfData = ({ localisation }) => {\n  const [data, setData] = useState([])\n  const [errors, setErrors] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchData(\n      `/statistics?country=${localisation}`,\n      Request,\n      setData,\n      setErrors,\n      setLoading\n    )\n  }, [localisation])\n\n  return (\n    <>\n      {loading && <LoaderComponent />}\n      {errors && (\n        <Error>\n          <FormattedMessage\n            id=\"errorServer\"\n            defaultMessage=\"An error has occurred from the server, please come back later.\"\n          />\n        </Error>\n      )}\n      {data.response &&\n        data.response.map(({ cases, deaths, tests }) => (\n          <Container key=\"Calculations\">\n            {tests.total > 0 && (\n              <Paragraph>\n                <FormattedMessage\n                  id=\"percentPeoplePositiveTest\"\n                  defaultMessage=\"{number}% of people tested have a positive test result.\"\n                  values={{\n                    number: countPercent(cases.total, tests.total),\n                  }}\n                />\n              </Paragraph>\n            )}\n            <Paragraph>\n              <FormattedMessage\n                id=\"percentPeopleDiagnosedRecovered\"\n                defaultMessage=\"{number}% of people diagnosed have recovered.\"\n                values={{\n                  number: countPercent(cases.recovered, cases.total),\n                }}\n              />\n            </Paragraph>\n            <Paragraph>\n              <FormattedMessage\n                id=\"percentPeopleDiagnosedDied\"\n                defaultMessage=\"{number}% of people diagnosed have died.\"\n                values={{\n                  number: countPercent(deaths.total, cases.total),\n                }}\n              />\n            </Paragraph>\n          </Container>\n        ))}\n    </>\n  )\n}\n\nexport default CalculationOfData\n","import React, { useState } from 'react'\nimport FooterComponent from '../../components/footer/Footer'\nimport Header from '../../components/header/Header'\nimport SelectCountry from '../../components/selectCountry/SelectCountry'\nimport Stats from '../../components/Stats/Stats'\nimport TableComponent from '../../components/tableCountryHistory/TableCountryHistory'\nimport Navigation from '../../components/navigation/Navigation'\nimport ToggleableCountriesContinentsStats from '../../components/toggleableCountriesContinentsStats/ToggleableCountriesContinentsStats'\nimport CalculationOfData from '../../components/calculationOfData/CalculationOfData'\n\nconst Statistics = () => {\n  const [country, setCountry] = useState('all')\n\n  const handleCountryChange = (prop = 'all') => {\n    setCountry(prop)\n  }\n  return (\n    <>\n      <Header handleCountryChange={handleCountryChange}>\n        <Navigation />\n      </Header>\n      <SelectCountry\n        handleCountryChange={handleCountryChange}\n        selectCountry={country}\n      />\n      <Stats localisation={country} />\n      {country === 'all' ? (\n        <>\n          <ToggleableCountriesContinentsStats\n            handleCountryChange={handleCountryChange}\n          />\n        </>\n      ) : (\n        <>\n          <CalculationOfData localisation={country} />\n          <TableComponent localisation={country} />\n        </>\n      )}\n\n      <FooterComponent />\n    </>\n  )\n}\n\nexport default Statistics\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport GlobalStyle from '../../themes/GlobalStyle'\nimport Statistics from '../Statistics/Statistics'\nimport { ThemeProviderWrapper } from '../../context/ThemeContext'\nimport { IntlProviderWrapper } from '../../context/LangContext'\n\nconst Root = () => {\n  return (\n    <IntlProviderWrapper>\n      <ThemeProviderWrapper>\n        <GlobalStyle />\n        <BrowserRouter basename=\"covid-19-stats\">\n          <Route path=\"/\" component={Statistics} exact />\n        </BrowserRouter>\n      </ThemeProviderWrapper>\n    </IntlProviderWrapper>\n  )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './views/Root/Root'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}